// General configuration used in all profiles
manifest {
  description = 'BAIHA Proof of Concept AFib Benchmark Workflow : Model Output' 
  author = 'Claire Furtick'
  nextflowVersion = '>=19.10.0'
  version = '1.0.8'
}

// Profiles configure nextflow depending on the environment (local, integration, live, etc.)

profiles {

	  docker {
      process {
          withName: validation{
            container = "docker.io/clairefurtick/baiha_output_validation:v1"
          }
      }
      process {
          withName: compute_metrics{
            container = "docker.io/clairefurtick/baiha_output_metrics:v1"
          }
      }
     
      process {
          withName: consolidation{
            container = "docker.io/clairefurtick/baiha_output_consolidation:v1"
          }
      }

      docker.enabled = true
      // set time zone for running docker containers
      //docker.runOptions = '--user \$(id -u):\$(id -g) -e TZ="\$([ -z \\"\$TZ\\"] && cat /etc/timezone || echo \\"\$TZ\\")"'
      docker.runOptions = '--user \$(id -u):\$(id -g) -e TZ=Europe/Madrid'
  }
}

// default parameter values

params  {

  input_file = "../input_data/Nuubo_dataset.csv"
  participant_id = "Nuubo"
  community_id = "BAIHA"
  challenge_ids  = "model-output"
  aggreg_dir = "./benchmark_data"
  goldstandard_dir = "./gold_standard"

  // Boolean operator: if set to CLOSED the whole workflow is executed; if OPEN, metrics are computed but aggregation/consolidation is not performed
  challenge_status = "CLOSED"

  validation_result = "val_output"
  assessment_results = "metrics_output"
  outdir = "results"
  statsdir = "stats"
  otherdir = "other"

}

// By default output execution reports
timeline {
  enabled = true
  file = "${params.statsdir}/timeline.html"
}
report {
  enabled = true
  file = "${params.statsdir}/report.html"
}
trace {
  enabled = true
  file = "${params.statsdir}/trace.txt"
}
dag {
  enabled = true
  file = "${params.statsdir}/DAG.dot"
}

trace {
    overwrite = true
}

report {
    overwrite = true
}

timeline {
    overwrite = true
}

dag {
    overwrite = true
}